@using Sandbox;
@using System;
@inherits PanelComponent

<root style="opacity:@(animTimer * 0.9f);">
	<div class="Main">
	<h2>Pause</h2>
		<div 
			class="button"
			onclick=@OnResume
		>
			Resume
		</div>
		<div
			class="button"
			onclick=@OnOpenInstruction
		>
			How to play
		</div>
		<div 
			class="button"
			onclick=@OnOpenLeaderboard
		>
			Leaderboard
		</div>
		<div 
			class="button"
			onclick=@EndGame
		>
			End Game
		</div>
	</div>
</root>

@code
{
	[Property] GameController GameCtrl { get; set; }
	[Property] Instruction Instruction { get; set; }
	[Property] Leaderboard Leaderboard { get; set; }

	float animTimer = 0f;

	bool IsPause() => GameCtrl.GamePause;

	protected override void OnUpdate()
	{
		if ( Input.EscapePressed)
		{
			Input.EscapePressed = false;
			GameCtrl.GamePause = !GameCtrl.GamePause;
		}

		if (Instruction.Visible) GameCtrl.GamePause = true;
		if (Leaderboard.Visible) GameCtrl.GamePause = true;
	}

	protected override void OnFixedUpdate()
	{
		base.OnUpdate();
		animTimer += IsPause() ? 0.1f : -0.1f;
		animTimer = Math.Clamp(animTimer, 0, 1);
	}

	void OnResume() => GameCtrl.GamePause = false;

	void OnOpenInstruction() => Instruction.Visible = true;

	void OnOpenLeaderboard() => Leaderboard.Visible = true;

	void EndGame() => Game.Close();

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine(
		animTimer
	);
}
